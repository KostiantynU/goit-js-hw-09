{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAAS,KACTC,OAAQ,KACRC,SAAU,MAuBZ,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFO,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OAGtEQ,EAAAnB,GAASoB,OAAOG,QAAQ,sBAAuCD,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,GAGtEA,E,IAhCPT,EAAKC,OAAOqB,iBAAiB,SAG7B,SAAqBC,G,IAAAC,EAAAD,EAAEC,OACD,UAAhBA,EAAOC,KACTzB,EAAKI,QAAUsB,OAAOF,EAAOG,OACJ,SAAhBH,EAAOC,KAChBzB,EAAKK,OAASqB,OAAOF,EAAOG,OACH,WAAhBH,EAAOC,OAChBzB,EAAKM,SAAWoB,OAAOF,EAAOG,O,IARlC3B,EAAKC,OAAOqB,iBAAiB,UAW7B,SAA4BM,GAC1BA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,EAAKM,SAAUwB,GAAK,EACtCvB,EAAcuB,EAAG9B,EAAKI,SACtBJ,EAAKI,SAAWJ,EAAKK,M,IAqBzBE,EAAc,EAAG,MACdwB,MAAK,SAAAR,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACjBuB,QAAQC,IAAI,uBAAwCb,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE3DyB,OAAM,SAAAX,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MAClBuB,QAAQC,IAAI,sBAAqCb,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: null,\n  stepEl: null,\n  amountEl: null,\n};\n\nrefs.formEl.addEventListener('input', beginOfWork);\nrefs.formEl.addEventListener('submit', beforeCratePromise);\n\nfunction beginOfWork({ target }) {\n  if (target.name === 'delay') {\n    refs.delayEl = Number(target.value);\n  } else if (target.name === 'step') {\n    refs.stepEl = Number(target.value);\n  } else if (target.name === 'amount') {\n    refs.amountEl = Number(target.value);\n  }\n}\nfunction beforeCratePromise(event) {\n  event.preventDefault();\n  for (let i = 0; i < refs.amountEl; i += 1) {\n    createPromise(i, refs.delayEl);\n    refs.delayEl += refs.stepEl;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // Fulfill\n      } else {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","param","target","name","Number","value","event","preventDefault","i","then","console","log","catch"],"version":3,"file":"03-promises.e07f0487.js.map"}